HTTP Response
*************

.[perex]
Nette encapsulates the HTTP response into objects with an understandable API while providing a sanitization filter.

Installation:

```shell
composer require nette/http
```

Whether it is still possible to send headers or change the status code tells the `isSent()` method. If it returns TRUE, it won't be possible to send another header or change the status code.

In that case, any attempt to send header or change code invokes `Nette\InvalidStateException`.

[Response status code |https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10] can be sent and retrieved this way:

```php
$httpResponse->setCode(Nette\Http\Response::S404_NOT_FOUND);

echo $httpResponse->getCode(); // 404
```

For better source code readability it is recommended to use [predefined constants |https://api.nette.org/2.3/Nette.Http.IResponse.html#S100_CONTINUE] instead of actual numbers.

Method `setContentType($type, $charset=NULL)` changes `Content-Type` response header:

```php
$httpResponse->setContentType('text/plain', 'UTF-8');
```

Redirection to another URL is done by `redirect($url, $code=302)` method. Do not forget to terminate the script afterwards!

```php
$httpResponse->redirect('http://example.com');
exit;
```


To set the document expiration date, we can use `setExpiration()` method. The parameter is either text data, number of seconds or a timestamp:

```php
// browser cache expires in one hour
$httpResponse->setExpiration('+ 1 hours');
```

Now we send the HTTP response header:

```php
$httpResponse->setHeader('Pragma', 'no-cache');

// or if we want to send the same header more times with different values
$httpResponse->addHeader('Pragma', 'no-cache');
```

Sent headers are also available:

```php
// returns associative array of headers
$headers = $httpResponse->getHeaders();

// returns concrete header (case-insensitive)
$pragma = $httpResponse->getHeader('Pragma');
```

There are two methods for cookie manipulation: `setCookie()` and `deleteCookie()`.
```php
// setCookie($name, $value, $time, [$path, [$domain, [$secure, [$httpOnly]]]])
$httpResponse->setCookie('lang', 'en', '100 days'); // send cookie

// deleteCookie($name, [$path, [$domain, [$secure]]])
$httpResponse->deleteCookie('lang'); // delete cookie
```

These two methods can take more parameters: `$path` (subdirectory where the cookie will be available), `$domain` and `$secure`. Their detailed description can be found in PHP manual for [php:setcookie] function.

{{composer: nette/http}}
